{"version":3,"sources":["components/Login.js","components/DynamicCarousel.js","components/SlideSelector.js","components/UserSelectionsModal.js","components/Slides.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","handleChange","bind","assertThisInitialized","handleSubmit","length","event","setState","defineProperty","target","name","value","preventDefault","history","push","alert","react_default","a","createElement","className","onSubmit","FormGroup","ControlLabel","FormControl","type","onChange","Button","variant","bsSize","disabled","validateForm","Component","DynamicCarousel","num","numberToWord","arr","i","Carousel","Item","key","Caption","toUpperCase","currentSelection","getSlides","SlideSelector","updateUserSelections","buildOptions","React","UserSelectionsModal","context","handleShow","handleClose","show","showFinishBtn","onClick","Modal","onHide","Header","closeButton","Title","Body","allUserSelections","join","Footer","Slides","userSelections","selectionUpdated","SlideSelector_SlideSelector","DynamicCarousel_DynamicCarousel","UserSelectionsModal_UserSelectionsModal","Routes","Switch","Route","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","basename","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86702184.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport \"../styles/Login.css\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\"\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.username.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n\r\n    if( this.state.username === \"shaadi\" && this.state.password === \"123\" )\r\n        this.props.history.push('/slides');\r\n    else\r\n        alert(\"Incorrect UserName/Password. Please try again.\");\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"Login\">\r\n        <h2>Please Login</h2>\r\n        <br />\r\n        <form onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n            <ControlLabel>UserName</ControlLabel>\r\n              <FormControl\r\n                name=\"username\"\r\n                type=\"text\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange} />\r\n            </FormGroup>\r\n            <br />\r\n            <FormGroup>\r\n            <ControlLabel>Password</ControlLabel>\r\n              <FormControl\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange} />\r\n            </FormGroup>\r\n            <br />\r\n            <FormGroup>\r\n              <Button\r\n                variant=\"primary\"\r\n                name=\"submit-form\"\r\n                type=\"submit\"\r\n                bsSize=\"lg\"\r\n                disabled={!this.validateForm()}\r\n              >\r\n              <b>Login</b>\r\n              </Button>\r\n            </FormGroup>\r\n        </form>\r\n    </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport \"../styles/DynamicCarousel.css\";\r\n\r\nexport default class DynamicCarousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  getSlides(num) {\r\n\r\n      var numberToWord = ['','one ','two ','three ','four ', 'five ','six ','seven ','eight ','nine ','ten ','eleven ','twelve ','thirteen ','fourteen ','fifteen ','sixteen ','seventeen ','Eighteen ','Nineteen', 'Twenty'];\r\n\r\n      var arr = [];\r\n\r\n      for (let i = 1; i <= num; i++) {\r\n          arr.push(\r\n              <Carousel.Item key={i}>\r\n                <Carousel.Caption>\r\n                  <h3>{numberToWord[i].toUpperCase()}</h3>\r\n                  <p>Label {numberToWord[i]}</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n          )\r\n      }\r\n\r\n      return arr;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"carouselSection\">\r\n    { ( this.props.currentSelection == 0 ? false : true ) &&\r\n        <Carousel>\r\n            {this.getSlides(this.props.currentSelection)}\r\n        </Carousel>\r\n    }\r\n    </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport \"../styles/SlideSelector.css\";\r\n\r\nexport default class SlideSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: 0};\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n    this.props.updateUserSelections(event.target.value);\r\n  }\r\n\r\n  buildOptions() {\r\n      var arr = [];\r\n\r\n      for (let i = 1; i <= 20; i++) {\r\n          arr.push(<option key={i} value={i}>{i}</option>)\r\n      }\r\n\r\n      return arr;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"SlideSelector\">\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label className=\"selectSildesComp\">\r\n          <b className=\"selectSildes\">Select Slides:</b>\r\n          <select value={this.state.value} onChange={this.handleChange}>\r\n             <option key={0} value={0}>Select</option>\r\n             {this.buildOptions()}\r\n          </select>\r\n        </label>\r\n      </form>\r\n    </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"../styles/UserSelectionsModal.css\";\r\n\r\nexport default class UserSelectionsModal extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n       { this.props.showFinishBtn &&\r\n        <Button variant=\"primary\" className=\"finishButton\" bsSize=\"lg\" onClick={this.handleShow}>\r\n          <b>Finish</b>\r\n        </Button>\r\n       }\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>User Selections</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            Following are all the numbers that user selected while using the App:\r\n            <br></br>\r\n            {this.props.allUserSelections.join(',')}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport \"../styles/Slides.css\";\r\nimport DynamicCarousel from './DynamicCarousel';\r\nimport SlideSelector from './SlideSelector';\r\nimport UserSelectionsModal from './UserSelectionsModal';\r\n\r\nexport default class Slides extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userSelections: [],\r\n      currentSelection: 0,\r\n      selectionUpdated: false\r\n    };\r\n  }\r\n\r\n  updateUserSelections( currentSelection ){\r\n\r\n    let arr = this.state.userSelections;\r\n\r\n    if( currentSelection != 0 )\r\n        arr.push(currentSelection);\r\n\r\n    this.setState({userSelections: arr, currentSelection: currentSelection, selectionUpdated: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"Slides\">\r\n        <SlideSelector updateUserSelections={this.updateUserSelections.bind(this)} />\r\n        <DynamicCarousel currentSelection={this.state.currentSelection} />\r\n        <UserSelectionsModal showFinishBtn={ (this.state.currentSelection == 0)? false : true } allUserSelections={this.state.userSelections} />\r\n    </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport Slides from \"./components/Slides\";\r\n\r\nexport default () =>\r\n  <Switch>\r\n    <Route path=\"/\" exact component={Login} />\r\n    <Route path=\"/slides\" exact component={Slides} />\r\n  </Switch>;\r\n","import React from 'react';\nimport Routes from \"./Routes\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename=\"/DynamicCarousel\" >\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}