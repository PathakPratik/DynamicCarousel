{"version":3,"sources":["actions/loginActions.js","components/Login.js","components/withLocalState.js","components/DynamicCarousel.js","actions/slidesActions.js","components/SlideSelector.js","components/UserSelectionsModal.js","components/Slides.js","Routes.js","App.js","reducers/rootReducer.js","reducers/reducers.js","serviceWorker.js","index.js"],"names":["SET_USERNAME","SET_PASSWORD","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleUsernameChange","bind","assertThisInitialized","handlePasswordChange","handleSubmit","username","length","password","event","setUsername","target","value","setPassword","preventDefault","history","push","alert","react_default","a","createElement","className","onSubmit","FormGroup","ControlLabel","FormControl","name","type","onChange","Button","variant","bsSize","disabled","validateForm","Component","mapDispatchToProps","connect","state","loginDetails","withLocalState","WrappedComponent","_React$Component","_class","localStorageAvailable","save","load","remove","inherits","createClass","key","checkLocalStorageAvailable","localStorage","setItem","removeItem","setState","e","getItem","data","assign","loadFromLocal","saveToLocal","removeFromLocal","React","DynamicCarouselWithLocalState","num","numberToWord","arr","i","Carousel","Item","Caption","toUpperCase","window","location","reload","currentSelection","getSlides","onClick","deleteLocalState","children","slideSelectionDetails","initialLoad","UPDATE_CURRENT_SELECTION","PUSH_TO_USER_SELECTIONS","SET_USER_SELECTIONS","updateCurrentSelection","pushToUserSelections","setUserSelections","userSelections","split","SlideSelectorWithLocalState","currentSelectionFromLocal","userSelectionsFromLocal","handleChange","buildOptions","_useState","useState","_useState2","slicedToArray","showModal","showModalStatus","Modal","show","onHide","Header","closeButton","Title","Body","join","Footer","Slides","logoutUser","components_SlideSelector","components_DynamicCarousel","components_UserSelectionsModal","Routes","Switch","Route","path","exact","component","App","rootReducer","combineReducers","action","Boolean","hostname","match","store","createStore","ReactDOM","render","es","BrowserRouter","basename","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.25c50b70.chunk.js","sourcesContent":["const SET_USERNAME = \"SET_USERNAME\";\r\nconst SET_PASSWORD = \"SET_PASSWORD\";\r\n\r\nexport function setUsername(username) {\r\n  return {\r\n    type: SET_USERNAME,\r\n    username\r\n  }\r\n}\r\n\r\nexport function setPassword(password) {\r\n  return {\r\n    type: SET_PASSWORD,\r\n    password\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\nimport { setUsername, setPassword } from '../actions/loginActions.js';\r\nimport \"../styles/Login.css\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  validateForm() {\r\n    return this.props.username.length > 0 && this.props.password.length > 0;\r\n  }\r\n\r\n  handleUsernameChange(event){\r\n    this.props.setUsername( event.target.value );\r\n  }\r\n\r\n  handlePasswordChange(event){\r\n    this.props.setPassword( event.target.value );\r\n  }\r\n\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n\r\n    if( this.props.username === \"shaadi\" && this.props.password === \"123\" )\r\n        this.props.history.push('/slides');\r\n    else\r\n        alert(\"Incorrect UserName/Password. Please try again.\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"Login\">\r\n        <h2>Please Login</h2>\r\n        <br />\r\n        <form onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n            <ControlLabel>UserName</ControlLabel>\r\n              <FormControl\r\n                name=\"username\"\r\n                type=\"text\"\r\n                value={this.props.username}\r\n                onChange={this.handleUsernameChange} />\r\n            </FormGroup>\r\n            <br />\r\n            <FormGroup>\r\n            <ControlLabel>Password</ControlLabel>\r\n              <FormControl\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={this.props.password}\r\n                onChange={this.handlePasswordChange} />\r\n            </FormGroup>\r\n            <br />\r\n            <FormGroup>\r\n              <Button\r\n                variant=\"primary\"\r\n                name=\"submit-form\"\r\n                type=\"submit\"\r\n                bsSize=\"lg\"\r\n                disabled={!this.validateForm()}\r\n              >\r\n              <b>Login</b>\r\n              </Button>\r\n            </FormGroup>\r\n        </form>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    username: state.loginDetails.username,\r\n    password: state.loginDetails.password\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setUsername,\r\n  setPassword\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\n\r\nconst withLocalState = (WrappedComponent) => {\r\n  return class extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { localStorageAvailable: false };\r\n        this.save = this.save.bind(this);\r\n        this.load = this.load.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.checkLocalStorageAvailable();\r\n    }\r\n\r\n    checkLocalStorageAvailable() {\r\n      const testKey = 'test';\r\n\r\n      try {\r\n          localStorage.setItem(testKey, testKey);\r\n          localStorage.removeItem(testKey);\r\n          this.setState({ localStorageAvailable: true });\r\n      } catch(e) {\r\n          this.setState({ localStorageAvailable: false });\r\n      }\r\n    }\r\n\r\n    load(key){\r\n      if (this.state.localStorageAvailable) {\r\n        return localStorage.getItem(key);\r\n      }\r\n      return null;\r\n    }\r\n\r\n    save(key, data){\r\n      if (this.state.localStorageAvailable) {\r\n        localStorage.setItem(key, data);\r\n      }\r\n    }\r\n\r\n    remove(key){\r\n      if (this.state.localStorageAvailable) {\r\n        localStorage.removeItem(key);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <WrappedComponent\r\n          loadFromLocal={this.load}\r\n          saveToLocal={this.save}\r\n          removeFromLocal={this.remove}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLocalState;","import React, { Component } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\nimport withLocalState from './withLocalState';\r\nimport \"../styles/DynamicCarousel.css\";\r\n\r\nclass DynamicCarousel extends Component {\r\n\r\n  getSlides(num) {\r\n\r\n      var numberToWord = ['','one ','two ','three ','four ', 'five ','six ','seven ','eight ','nine ','ten ','eleven ','twelve ','thirteen ','fourteen ','fifteen ','sixteen ','seventeen ','Eighteen ','Nineteen', 'Twenty'];\r\n\r\n      var arr = [];\r\n\r\n      for (let i = 1; i <= num; i++) {\r\n          arr.push(\r\n              <Carousel.Item key={i}>\r\n                <Carousel.Caption>\r\n                  <h3>{numberToWord[i].toUpperCase()}</h3>\r\n                  <p>Label {numberToWord[i]}</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n          )\r\n      }\r\n\r\n      return arr;\r\n  }\r\n\r\n  deleteLocalState(){\r\n    this.props.removeFromLocal('currentSelection');\r\n    this.props.removeFromLocal('userSelections');\r\n    alert(\"Deleted Saved State Successfully!\")\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n    <div className=\"carouselSection\">\r\n    { ( this.props.currentSelection == 0 ? false : true ) &&\r\n        <div>\r\n            <Carousel>\r\n                {this.getSlides(this.props.currentSelection)}\r\n            </Carousel>\r\n            <div className=\"deleteStateBtn\">\r\n            <span onClick={this.deleteLocalState.bind(this)}>{this.props.children}</span>\r\n            </div>\r\n        </div>\r\n    }\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentSelection: state.slideSelectionDetails.currentSelection,\r\n    initialLoad: state.slideSelectionDetails.initialLoad\r\n  };\r\n}\r\n\r\nconst DynamicCarouselWithLocalState = withLocalState(DynamicCarousel);\r\n\r\nexport default connect(mapStateToProps)(DynamicCarouselWithLocalState);","const UPDATE_CURRENT_SELECTION = \"UPDATE_CURRENT_SELECTION\";\r\nconst PUSH_TO_USER_SELECTIONS = \"PUSH_TO_USER_SELECTIONS\";\r\nconst SET_USER_SELECTIONS = \"SET_USER_SELECTIONS\";\r\n\r\nexport function updateCurrentSelection(currentSelection) {\r\n  return {\r\n    type: UPDATE_CURRENT_SELECTION,\r\n    currentSelection\r\n  }\r\n}\r\n\r\nexport function pushToUserSelections(currentSelection) {\r\n  return {\r\n    type: PUSH_TO_USER_SELECTIONS,\r\n    currentSelection\r\n  }\r\n}\r\n\r\nexport function setUserSelections(userSelections) {\r\n  return {\r\n    type: SET_USER_SELECTIONS,\r\n    userSelections: userSelections.split(\",\")\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport \"../styles/SlideSelector.css\";\r\nimport { connect } from 'react-redux';\r\nimport withLocalState from './withLocalState';\r\nimport { updateCurrentSelection, pushToUserSelections, setUserSelections } from '../actions/slidesActions.js';\r\n\r\nclass SlideSelector extends React.Component {\r\n\r\n  handleChange(event) {\r\n\r\n    const currentSelection = event.target.value;\r\n\r\n    this.props.updateCurrentSelection(currentSelection);\r\n\r\n    if( currentSelection != 0 )\r\n        this.props.pushToUserSelections(currentSelection);\r\n\r\n    this.props.saveToLocal('currentSelection', currentSelection);\r\n    this.props.saveToLocal('userSelections', this.props.userSelections);\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n    const currentSelectionFromLocal = this.props.loadFromLocal('currentSelection');\r\n    const userSelectionsFromLocal = this.props.loadFromLocal('userSelections');\r\n\r\n    if( this.props.initialLoad && currentSelectionFromLocal )\r\n        this.props.updateCurrentSelection(currentSelectionFromLocal);\r\n\r\n    if( this.props.initialLoad && userSelectionsFromLocal )\r\n        this.props.setUserSelections(userSelectionsFromLocal);\r\n\r\n  }\r\n\r\n  buildOptions() {\r\n      var arr = [];\r\n\r\n      for (let i = 1; i <= 20; i++) {\r\n          arr.push(<option key={i} value={i}>{i}</option>)\r\n      }\r\n\r\n      return arr;\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n    <div className=\"SlideSelector\">\r\n      <form>\r\n        <label className=\"selectSildesComp\">\r\n          <b className=\"selectSildes\">Select Slides:</b>\r\n          <select value={this.props.currentSelection} onChange={this.handleChange.bind(this)}>\r\n             <option key={0} value={0}>Select</option>\r\n             {this.buildOptions()}\r\n          </select>\r\n        </label>\r\n      </form>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    userSelections: state.slideSelectionDetails.userSelections,\r\n    currentSelection: state.slideSelectionDetails.currentSelection,\r\n    initialLoad: state.slideSelectionDetails.initialLoad\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateCurrentSelection,\r\n  pushToUserSelections,\r\n  setUserSelections\r\n};\r\n\r\nconst SlideSelectorWithLocalState = withLocalState(SlideSelector);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SlideSelectorWithLocalState);","import React, { Component, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\nimport \"../styles/UserSelectionsModal.css\";\r\n\r\nconst UserSelectionsModal = (props) => {\r\n\r\n    const [showModal, showModalStatus] = useState(false);\r\n\r\n    return (\r\n      <div>\r\n      { props.currentSelection != 0 &&\r\n        <Button variant=\"primary\" onClick={ () => showModalStatus(true) } className=\"finishButton\" bsSize=\"lg\">\r\n          <b>Show User Selections</b>\r\n        </Button>\r\n      }\r\n        <Modal show={showModal} onHide={ () => showModalStatus(false) }>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>User Selections</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            Following are all the numbers that user selected while using the App:\r\n            <br></br>\r\n            {props.userSelections.join(',')}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={ () => showModalStatus(false) }>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    userSelections: state.slideSelectionDetails.userSelections,\r\n    currentSelection: state.slideSelectionDetails.currentSelection\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserSelectionsModal);","import React, { Component } from \"react\";\r\nimport \"../styles/Slides.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport DynamicCarousel from './DynamicCarousel';\r\nimport SlideSelector from './SlideSelector';\r\nimport UserSelectionsModal from './UserSelectionsModal';\r\n\r\nexport default class Slides extends Component {\r\n\r\n  logoutUser(){\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"Slides\">\r\n        <Button variant=\"primary\" className=\"logoutButton\" onClick={this.logoutUser.bind(this)} bsSize=\"lg\">\r\n          <b>Logout</b>\r\n        </Button>\r\n        <SlideSelector />\r\n        <DynamicCarousel>\r\n            <Button variant=\"primary\" className=\"finishButton\" bsSize=\"lg\">\r\n              <b>Delete State</b>\r\n            </Button>\r\n        </DynamicCarousel>\r\n        <UserSelectionsModal/>\r\n    </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport Slides from \"./components/Slides\";\r\n\r\nexport default () =>\r\n  <Switch>\r\n    <Route path=\"/\" exact component={Login} />\r\n    <Route path=\"/slides\" component={Slides} />\r\n  </Switch>;\r\n","import React from 'react';\nimport Routes from \"./Routes\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux'\r\n\r\nimport {\r\n  loginReducer,\r\n  slidesReducer\r\n} from './reducers'\r\n\r\nconst rootReducer = combineReducers({\r\n  loginDetails: loginReducer,\r\n  slideSelectionDetails:slidesReducer\r\n})\r\n\r\nexport default rootReducer;","\r\nexport function loginReducer( state, action) {\r\n\r\n    if (typeof state === 'undefined') {\r\n        state = { username: \"\", password: \"\" }\r\n    }\r\n\r\n     switch (action.type) {\r\n        case \"SET_USERNAME\":\r\n          return { username: action.username, password: state.password };\r\n        case \"SET_PASSWORD\":\r\n          return { username: state.username, password: action.password };\r\n        default:\r\n          return state\r\n     }\r\n}\r\n\r\nexport function slidesReducer(state, action) {\r\n\r\n    if (typeof state === 'undefined') {\r\n        state = { userSelections: [],currentSelection: 0, initialLoad: true }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case \"UPDATE_CURRENT_SELECTION\":\r\n          return { userSelections: state.userSelections, currentSelection: action.currentSelection, initialLoad: false };\r\n        case \"PUSH_TO_USER_SELECTIONS\":\r\n          return pushToUserSelections(state,action);\r\n        case \"SET_USER_SELECTIONS\":\r\n          return { userSelections: action.userSelections, currentSelection: state.currentSelection, initialLoad: false };\r\n        default:\r\n          return state\r\n    }\r\n}\r\n\r\nfunction pushToUserSelections(state,action){\r\n\r\n    let arr = state.userSelections;\r\n\r\n    arr.push(state.currentSelection);\r\n\r\n    return { userSelections: arr, currentSelection: state.currentSelection, initialLoad: false }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport rootReducer from './reducers/rootReducer.js';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store} >\n      <Router basename=\"/DynamicCarousel\" >\n        <App />\n      </Router>\n    </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}